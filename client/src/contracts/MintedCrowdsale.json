{
  "contractName": "MintedCrowdsale",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokensPurchased",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "Rate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Token",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "Wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"Rate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Token\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"Wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"weiRaised\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to MintedCrowdsale for minting.\",\"kind\":\"dev\",\"methods\":{\"Rate()\":{\"returns\":{\"_0\":\"the number of token units a buyer gets per wei.\"}},\"Token()\":{\"returns\":{\"_0\":\"the token being sold.\"}},\"Wallet()\":{\"returns\":{\"_0\":\"the address where funds are collected.\"}},\"buyTokens(address)\":{\"details\":\"low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.\",\"params\":{\"beneficiary\":\"Recipient of the token purchase\"}},\"weiRaised()\":{\"returns\":{\"_0\":\"the amount of wei raised.\"}}},\"title\":\"MintedCrowdsale\",\"version\":1},\"userdoc\":{\"events\":{\"TokensPurchased(address,address,uint256,uint256)\":{\"notice\":\"Event for token purchase logging\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/MintedCrowdsale.sol\":\"MintedCrowdsale\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x842ccf9a6cd33e17b7acef8372ca42090755217b358fe0c44c98e951ea549d3a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6cc5f36034a77d105263ae6d8cc18b16260b4a0f6cdb1a26f21ba3670fdd06dd\",\"dweb:/ipfs/QmdJrJ2LoG546BkfyZPta96BNmaVBfqZoh8kq7PqHuQyPk\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x98a1161933ac945f9482eca0f5850afaeac2fc30d3b131cdc5820f4e2519cacc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e834a1ff0faae60ed8649a9a70b9fd64c79dadb132c75f0deae1ca980e6363cc\",\"dweb:/ipfs/Qma8vyFn4Ra7aNWqBPyeyWsgby3MrALr5yZ7zC1i9SRfHH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x02348b2e4b9f3200c7e3907c5c2661643a6d8520e9f79939fbb9b4005a54894d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d41d627f4ef9c6006df8c2d01227d3cf4a6c3359b5704c629d88933272eecadd\",\"dweb:/ipfs/QmYDo7MvMsvuDxuJZ9RC9zFganS3Tm8RYzSmBP5qSmJfuY\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://39a05eec7083dfa0cc7e0cbfe6cd1bd085a340af1ede93fdff3ad047c5fb3d8e\",\"dweb:/ipfs/QmVApz5fCUq2QC8gKTsNNdCmcedJ3ETHp68zR5N3WUKS4r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]},\"project:/contracts/Crowdsale.sol\":{\"keccak256\":\"0x6762a32236a4a9e64bdbb95dd9b967ec1f8026dd9fe9a9152e4650c22742440e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0319ba44ae8c959dfeb276e87b4c7e56967e4b8e4f2ace9cd86c68e5d19b8b64\",\"dweb:/ipfs/QmR4U21PQJ8FcXZuH2wsxG2UV5DzsNR63XUFumtqC1C4Tq\"]},\"project:/contracts/ERC20Mintable.sol\":{\"keccak256\":\"0x6b592497fe705882f7cb520af34fddb52a4bf8f11fd37fb62ee3084aa5df6dbc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://804f1ebc913ce6b215dc4f1ee0800fe09035360fb46e33e6fbdcbe2e69f8fece\",\"dweb:/ipfs/QmeAFweqSVc7zQCYC9ntGzcry17B5qA1tnaJZWfu5Ud7C1\"]},\"project:/contracts/MintedCrowdsale.sol\":{\"keccak256\":\"0x27dbf53fefe3d7bcdea98cf043d569d37a8bab46a34549fc17007ec50cd333b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b221e49c8ef07d641aec35416c68a1823dfd526bff77a5793aa81182ddf6c25b\",\"dweb:/ipfs/QmVqXves12GbP86577RYmKaYqNth7X34fCYsAxjdjL1bFY\"]},\"project:/contracts/MinterRole.sol\":{\"keccak256\":\"0x64a07ea3e2530a1f12db13ecf021d402ddbf41a31c1124fecab4172e91e8cb77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0156cf49f10c5c857bf1e926bfda7f50f5e3aa32b7091ff0f7f49722e5479911\",\"dweb:/ipfs/QmTyyUQMsXGgxcw2VydjTHGHgksKkPK45XGJNkTMwLwuio\"]},\"project:/contracts/Roles.sol\":{\"keccak256\":\"0x659f34a7e4785d7cc9fd43e0daf7383bb127052fdb78ac5813de0e3b1ac47833\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://700f6a08d9793a6c6e16cb3b4cc4c4629950e130ecabb60a8dcdb2faf0a18eff\",\"dweb:/ipfs/QmRtokXjNYBYg5M6xvSVRABUdVhEjpm5Tcm8zLxxRwqwqP\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Crowdsale.sol\";\r\nimport \"./ERC20Mintable.sol\";\r\n\r\n/**\r\n * @title MintedCrowdsale\r\n * @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\r\n * Token ownership should be transferred to MintedCrowdsale for minting.\r\n */\r\nabstract contract MintedCrowdsale is Crowdsale{\r\n    /**\r\n     * @dev Overrides delivery by minting tokens upon purchase.\r\n     * @param beneficiary Token purchaser\r\n     * @param tokenAmount Number of tokens to be minted\r\n     */\r\n     \r\n    function _deliverTokens(address beneficiary, uint256 tokenAmount)   internal override {\r\n        // Potentially dangerous assumption about the type of the token.\r\n        require(\r\n            ERC20Mintable(address(Token())).mint(beneficiary, tokenAmount),\r\n                \"MintedCrowdsale: minting failed\"\r\n        );\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Chris Lytrokapis\\Desktop\\Dev\\tokensaleV2\\contracts\\MintedCrowdsale.sol",
  "ast": {
    "absolutePath": "project:/contracts/MintedCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        1313
      ],
      "Context": [
        1335
      ],
      "Crowdsale": [
        2249
      ],
      "ERC20": [
        689
      ],
      "ERC20Mintable": [
        2279
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "MintedCrowdsale": [
        2399
      ],
      "MinterRole": [
        2508
      ],
      "ReentrancyGuard": [
        143
      ],
      "Roles": [
        2671
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        1647
      ]
    },
    "id": 2400,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2368,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:14"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 2369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2400,
        "sourceUnit": 2250,
        "src": "62:25:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 2370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2400,
        "sourceUnit": 2280,
        "src": "89:29:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2372,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2249,
              "src": "353:9:14"
            },
            "id": 2373,
            "nodeType": "InheritanceSpecifier",
            "src": "353:9:14"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2371,
          "nodeType": "StructuredDocumentation",
          "src": "122:192:14",
          "text": " @title MintedCrowdsale\n @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\n Token ownership should be transferred to MintedCrowdsale for minting."
        },
        "fullyImplemented": false,
        "id": 2399,
        "linearizedBaseContracts": [
          2399,
          2249,
          143,
          1335
        ],
        "name": "MintedCrowdsale",
        "nameLocation": "334:15:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2199
            ],
            "body": {
              "id": 2397,
              "nodeType": "Block",
              "src": "645:240:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2391,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "789:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2392,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2378,
                            "src": "802:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2386,
                                      "name": "Token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2061,
                                      "src": "774:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$767_$",
                                        "typeString": "function () view returns (contract IERC20)"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "774:7:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$767",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$767",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "766:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2384,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "766:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "766:16:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2383,
                              "name": "ERC20Mintable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "752:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$2279_$",
                                "typeString": "type(contract ERC20Mintable)"
                              }
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "752:31:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$2279",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2278,
                          "src": "752:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "752:62:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74656443726f776473616c653a206d696e74696e67206661696c6564",
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "833:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                          "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                        },
                        "value": "MintedCrowdsale: minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                          "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                        }
                      ],
                      "id": 2382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "730:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:147:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "730:147:14"
                }
              ]
            },
            "documentation": {
              "id": 2374,
              "nodeType": "StructuredDocumentation",
              "src": "369:177:14",
              "text": " @dev Overrides delivery by minting tokens upon purchase.\n @param beneficiary Token purchaser\n @param tokenAmount Number of tokens to be minted"
            },
            "id": 2398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nameLocation": "568:14:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "636:8:14"
            },
            "parameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "591:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2398,
                  "src": "583:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "612:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2398,
                  "src": "604:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:42:14"
            },
            "returnParameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:14"
            },
            "scope": 2399,
            "src": "559:326:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2400,
        "src": "316:572:14",
        "usedErrors": []
      }
    ],
    "src": "35:853:14"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/MintedCrowdsale.sol",
    "exportedSymbols": {
      "Address": [
        1313
      ],
      "Context": [
        1335
      ],
      "Crowdsale": [
        2249
      ],
      "ERC20": [
        689
      ],
      "ERC20Mintable": [
        2279
      ],
      "IERC20": [
        767
      ],
      "IERC20Metadata": [
        792
      ],
      "MintedCrowdsale": [
        2399
      ],
      "MinterRole": [
        2508
      ],
      "ReentrancyGuard": [
        143
      ],
      "Roles": [
        2671
      ],
      "SafeERC20": [
        1016
      ],
      "SafeMath": [
        1647
      ]
    },
    "id": 2400,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2368,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:14"
      },
      {
        "absolutePath": "project:/contracts/Crowdsale.sol",
        "file": "./Crowdsale.sol",
        "id": 2369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2400,
        "sourceUnit": 2250,
        "src": "62:25:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/ERC20Mintable.sol",
        "file": "./ERC20Mintable.sol",
        "id": 2370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2400,
        "sourceUnit": 2280,
        "src": "89:29:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 2372,
              "name": "Crowdsale",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2249,
              "src": "353:9:14"
            },
            "id": 2373,
            "nodeType": "InheritanceSpecifier",
            "src": "353:9:14"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 2371,
          "nodeType": "StructuredDocumentation",
          "src": "122:192:14",
          "text": " @title MintedCrowdsale\n @dev Extension of Crowdsale contract whose tokens are minted in each purchase.\n Token ownership should be transferred to MintedCrowdsale for minting."
        },
        "fullyImplemented": false,
        "id": 2399,
        "linearizedBaseContracts": [
          2399,
          2249,
          143,
          1335
        ],
        "name": "MintedCrowdsale",
        "nameLocation": "334:15:14",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              2199
            ],
            "body": {
              "id": 2397,
              "nodeType": "Block",
              "src": "645:240:14",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2391,
                            "name": "beneficiary",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "789:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2392,
                            "name": "tokenAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2378,
                            "src": "802:11:14",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 2386,
                                      "name": "Token",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2061,
                                      "src": "774:5:14",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$767_$",
                                        "typeString": "function () view returns (contract IERC20)"
                                      }
                                    },
                                    "id": 2387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "774:7:14",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$767",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$767",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 2385,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "766:7:14",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 2384,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "766:7:14",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 2388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "766:16:14",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2383,
                              "name": "ERC20Mintable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2279,
                              "src": "752:13:14",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ERC20Mintable_$2279_$",
                                "typeString": "type(contract ERC20Mintable)"
                              }
                            },
                            "id": 2389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "752:31:14",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$2279",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2278,
                          "src": "752:36:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 2393,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "752:62:14",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74656443726f776473616c653a206d696e74696e67206661696c6564",
                        "id": 2394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "833:33:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                          "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                        },
                        "value": "MintedCrowdsale: minting failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0eac45d7b8513926ae2e01dfc6ebd8082fa88af4d89904f45e3d97f75d97ab5",
                          "typeString": "literal_string \"MintedCrowdsale: minting failed\""
                        }
                      ],
                      "id": 2382,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "730:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "730:147:14",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2396,
                  "nodeType": "ExpressionStatement",
                  "src": "730:147:14"
                }
              ]
            },
            "documentation": {
              "id": 2374,
              "nodeType": "StructuredDocumentation",
              "src": "369:177:14",
              "text": " @dev Overrides delivery by minting tokens upon purchase.\n @param beneficiary Token purchaser\n @param tokenAmount Number of tokens to be minted"
            },
            "id": 2398,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_deliverTokens",
            "nameLocation": "568:14:14",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 2380,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "636:8:14"
            },
            "parameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "591:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2398,
                  "src": "583:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "583:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2378,
                  "mutability": "mutable",
                  "name": "tokenAmount",
                  "nameLocation": "612:11:14",
                  "nodeType": "VariableDeclaration",
                  "scope": 2398,
                  "src": "604:19:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2377,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "582:42:14"
            },
            "returnParameters": {
              "id": 2381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:0:14"
            },
            "scope": 2399,
            "src": "559:326:14",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 2400,
        "src": "316:572:14",
        "usedErrors": []
      }
    ],
    "src": "35:853:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-08-31T18:01:41.191Z",
  "devdoc": {
    "details": "Extension of Crowdsale contract whose tokens are minted in each purchase. Token ownership should be transferred to MintedCrowdsale for minting.",
    "kind": "dev",
    "methods": {
      "Rate()": {
        "returns": {
          "_0": "the number of token units a buyer gets per wei."
        }
      },
      "Token()": {
        "returns": {
          "_0": "the token being sold."
        }
      },
      "Wallet()": {
        "returns": {
          "_0": "the address where funds are collected."
        }
      },
      "buyTokens(address)": {
        "details": "low level token purchase ***DO NOT OVERRIDE*** This function has a non-reentrancy guard, so it shouldn't be called by another `nonReentrant` function.",
        "params": {
          "beneficiary": "Recipient of the token purchase"
        }
      },
      "weiRaised()": {
        "returns": {
          "_0": "the amount of wei raised."
        }
      }
    },
    "title": "MintedCrowdsale",
    "version": 1
  },
  "userdoc": {
    "events": {
      "TokensPurchased(address,address,uint256,uint256)": {
        "notice": "Event for token purchase logging"
      }
    },
    "kind": "user",
    "methods": {},
    "version": 1
  }
}